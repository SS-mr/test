<?php
/**
 * PHP Static Analyzer — Streaming Excel Output Edition (Final, Fully Compliant)
 * 対象: PHP 5.6 + PostgreSQL, 全要件対応
 */

require_once __DIR__ . '/vendor/autoload.php';
use PhpOffice\PhpSpreadsheet\Spreadsheet;
use PhpOffice\PhpSpreadsheet\Writer\Xlsx;

// ========== 初期設定 ==========
$targetDir = $argv[1] ?? exit("Usage: php analyzer.php [target_directory]\n");
if (!is_dir($targetDir)) exit("Invalid directory\n");
$procedureList = file_exists('procedures.txt') ? array_map('trim', file('procedures.txt')) : [];
$viewList = file_exists('views.txt') ? array_map('trim', file('views.txt')) : [];
$extensions = ['php','inc','html','js'];

// ========== ヘルパ関数 ==========
function strip_comments($c, $e) {
    if (in_array($e, ['php','inc'])) {
        $c = preg_replace('!//.*!', '', $c);
        $c = preg_replace('!#.*!', '', $c);
        return preg_replace('!/\*.*?\*/!s', '', $c);
    } elseif ($e === 'html') {
        return preg_replace('/<!--.*?-->/s', '', $c);
    } elseif ($e === 'js') {
        $c = preg_replace('!//.*!', '', $c);
        return preg_replace('!/\*.*?\*/!s', '', $c);
    }
    return $c;
}

function extract_sql($code) {
    return preg_match_all('/\b(WITH\s+.*?SELECT|SELECT|INSERT\s+INTO|UPDATE|DELETE\s+FROM|CREATE\s+TEMP(?:ORARY)?\s+TABLE)\b.*?;/is', $code, $m) ? $m[0] : [];
}

function extract_words_from_sql($sqls) {
    $used = [];
    foreach ($sqls as $sql) {
        if (preg_match_all('/\b(FROM|JOIN|INTO|UPDATE|DELETE\s+FROM|CALL)\s+([\w\."]+)/i', $sql, $m)) {
            foreach ($m[2] as $tbl) $used[] = trim($tbl, '"');
        }
    }
    return array_unique($used);
}

function extract_proc_calls($sqls, $procedureList) {
    $results = [];
    foreach ($sqls as $sql) {
        if (preg_match_all('/(CALL|SELECT)\s+(\w+)\s*\(([^)]*)\)/i', $sql, $m, PREG_SET_ORDER)) {
            foreach ($m as $call) {
                if (in_array($call[2], $procedureList)) {
                    $results[] = $call[2] . '@' . trim($call[3]);
                }
            }
        }
    }
    return $results;
}

function extract_includes($code, $file) {
    $includes = [];
    if (preg_match_all('/(include|require)(_once)?\s*\(?\s*([^\n;\)]+)\s*\)?\s*;/i', $code, $m, PREG_SET_ORDER)) {
        foreach ($m as $row) {
            if (preg_match('/^["\'](.+)["\']$/', trim($row[3]), $mm)) {
                $includes[] = $mm[1];
            }
        }
    }
    return $includes;
}

function extract_frontend($code) {
    return [
        'action'          => preg_match('/action\s*=\s*["\']/', $code) ? '○' : '',
        'location.href'   => preg_match('/location\.href\s*=/', $code) ? '○' : '',
        'window.open'     => preg_match('/window\.open\s*\(/', $code) ? '○' : '',
        'XMLHttpRequest'  => preg_match('/new\s+XMLHttpRequest\s*\(/', $code) ? '○' : ''
    ];
}

// ========== Excel ストリーミング準備 ==========
$book = new Spreadsheet();
$book->removeSheetByIndex(0);
$sheetMap = [];
function get_sheet($book, &$sheetMap, $title) {
    if (!isset($sheetMap[$title])) {
        $sheetMap[$title] = $book->createSheet();
        $sheetMap[$title]->setTitle($title);
        $sheetMap[$title]->fromArray([], null, 'A1');
    }
    return $sheetMap[$title];
}
function append_row($sheet, $row) {
    $rowIndex = $sheet->getHighestRow() + 1;
    $sheet->fromArray($row, null, "A{$rowIndex}");
}

// ========== 走査 & 出力 ==========
$it = new RecursiveIteratorIterator(new RecursiveDirectoryIterator($targetDir));
foreach ($it as $f) {
    if (!$f->isFile()) continue;
    $ext = strtolower($f->getExtension());
    if (!in_array($ext, $extensions)) continue;

    $path = ltrim(str_replace(realpath($targetDir), '', realpath($f->getPathname())), '/\');
    $raw = file_get_contents($f->getPathname());
    $code = strip_comments($raw, $ext);
    unset($raw);

    // SQL解析
    $sqls = extract_sql($code);
    $words = extract_words_from_sql($sqls);
    $procs = extract_proc_calls($sqls, $procedureList);
    $includes = extract_includes($code, $path);
    $frontend = extract_frontend($code);

    // Used-Procedures
    if ($procs) {
        $procSheet = get_sheet($book, $sheetMap, 'Used-Procedures');
        append_row($procSheet, ["[{$path}]"]);
        append_row($procSheet, ['プロシージャ@引数', 'C', 'R', 'U', 'D']);
        foreach ($procs as $p) append_row($procSheet, [$p, '', '', '', '']);
        append_row($procSheet, ['']);
    }

    // Used-Views
    foreach ($words as $w) {
        if (in_array($w, $viewList)) {
            $viewSheet = get_sheet($book, $sheetMap, 'Used-Views');
            append_row($viewSheet, [$path, $w]);
        }
    }

    // Include-Relations
    if ($includes) {
        $incSheet = get_sheet($book, $sheetMap, 'Include-Relations');
        append_row($incSheet, array_merge([$path], $includes));
    }

    // Frontend-Access
    if (array_filter($frontend)) {
        $frontSheet = get_sheet($book, $sheetMap, 'Frontend-Access');
        $cols = $frontSheet->rangeToArray('A1:' . $frontSheet->getHighestColumn() . '1')[0];
        $colIdx = array_search($path, $cols);
        if ($colIdx === false) {
            $col = chr(ord('B') + count($cols) - 1);
            $frontSheet->setCellValue("{$col}1", $path);
            $frontSheet->setCellValue("A2", 'action');
            $frontSheet->setCellValue("A3", 'location.href');
            $frontSheet->setCellValue("A4", 'window.open');
            $frontSheet->setCellValue("A5", 'XMLHttpRequest');
        }
        $cols = $frontSheet->rangeToArray('A1:' . $frontSheet->getHighestColumn() . '1')[0];
        $colIdx = array_search($path, $cols);
        if ($colIdx !== false) {
            $col = chr(ord('A') + $colIdx);
            $frontSheet->setCellValue("{$col}2", $frontend['action']);
            $frontSheet->setCellValue("{$col}3", $frontend['location.href']);
            $frontSheet->setCellValue("{$col}4", $frontend['window.open']);
            $frontSheet->setCellValue("{$col}5", $frontend['XMLHttpRequest']);
        }
    }

    unset($code, $sqls, $words, $procs, $includes, $frontend);
}

// ========== 保存 ==========
$writer = new Xlsx($book);
$writer->save('analysis_result.xlsx');
echo "Excel 出力完了: analysis_result.xlsx\n";
